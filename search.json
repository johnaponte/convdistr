[{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"htinstatps://johnaponte.github.io/convdistr/articles/sample_size.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Sample size with Uncertainty","text":"example show details construct new factory DISTRIBUTION objects using convolution parameters propagate uncertainty final calculation. estimation sample size require input different parameters way parameters correct, power significant result correct. However many times uncertainty parameters reflected power. convdist package help explicitly express uncertainty parameters estimate distribution sample sizes satisfy power requirements assay. explore estimate sample size binomial outcome uncertainty explain details construct DISTRIBUTION factory function.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/articles/sample_size.html","id":"sample-size-for-a-proportion","dir":"Articles","previous_headings":"","what":"Sample size for a proportion","title":"Sample size with Uncertainty","text":"individually randomized trial, number subjects per group defined \\[n = (z_{\\alpha/2} + z_\\beta)^2 [\\pi_0(1 – \\pi_0) + \\pi_1(1 – \\pi1)]/(\\pi_0 – \\pi_1)^2\\] formula, \\(z_{\\alpha/2}\\) \\(z_\\beta\\) standard normal distribution values corresponding upper tail probabilities \\(z_{\\alpha/2}\\) \\(z_\\beta\\) respectively. choice sample size provides power 100(1 – \\(\\beta\\))% obtaining significant difference (\\(P < \\alpha\\) two-sided test), assuming true (population) proportion presence absence interventions \\(\\pi_1\\) \\(\\pi_0\\) respectively \\(\\pi_1\\) can express terms \\(\\pi_0\\) \\(\\pi_1 = \\pi_0 RR\\) \\(RR\\) relative risk. real world, uncertainty exact values \\(\\pi_0\\) \\(RR\\) may come previous studies surveys. distribution \\(n\\) uncertainty taking account?","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/articles/sample_size.html","id":"a-new-distribution-factory","dir":"Articles","previous_headings":"","what":"A new DISTRIBUTION factory","title":"Sample size with Uncertainty","text":"can construct DISTRIBUTION object produce random numbers taking account probability distribution \\(\\pi_0\\) \\(RR\\) See code new_UNIFORM function example factory DISTRIBUTION objects: function return structure consist list four named vector class attribute include “DISTRIBUTION” components list : distribution : character name distribution implemented. good practice use name also class attribute seed : numerical seed use get repeatable sample summary function Use sample function ensure new object different seed oval : observed value. value expected. used number mathematical operations distributions simple scalar rfunc(n) : function generate random numbers distribution. parameter n number drawns distribution. returns matrix many rows n, many columns dimensions distributions, rfunc defined within restrict_environment function ensure variables required function included environment function. prevent reference leaking make objects big slow saved file. factory object sample size proportions defined :","code":"library(convdistr) new_UNIFORM #> function (p_min, p_max, p_dimnames = \"rvar\")  #> { #>     stopifnot(p_min <= p_max) #>     .oval = (p_max + p_min)/2 #>     names(.oval) <- p_dimnames #>     structure(list(distribution = \"UNIFORM\", seed = sample(1:2^15,  #>         1), oval = .oval, rfunc = restrict_environment(function(n) { #>         matrix(runif(n, p_min, p_max), ncol = 1, dimnames = list(1:n,  #>             p_dimnames)) #>     }, p_min = p_min, p_max = p_max, p_dimnames = p_dimnames)),  #>         class = c(\"UNIFORM\", \"DISTRIBUTION\")) #> } #> <bytecode: 0x55f330e10840> #> <environment: namespace:convdistr> #' Sample size for proportions, with uncertainty #'  #' Create an new DISTRIBUTION object that produce #' random drawns of the estimated sample size for #' two proportions #' @param p0 a DISTRIBUTION object that drawns for proportions in control group #' @param logrr a DISTRIBUTION object that drawns log(RR) of the intervention #' @param alpha significant value #' @param beta  1-power new_SAMPLE_SIZE <- function(p0,logrr, alpha= 0.05, beta=0.2){   #checkings   stopifnot(inherits(p0,\"DISTRIBUTION\"))   stopifnot(inherits(logrr,\"DISTRIBUTION\"))   stopifnot(0 < alpha & alpha < 1)   stopifnot(0 < beta & beta < 1)   # function of alpha and beta   f_alpha_beta <- (qnorm(alpha/2,lower.tail = F) + qnorm(beta, lower.tail = F)) ^ 2       # The expected value of the distribution with default name for the dimension   # based on the oval value of the individual distributions     v0 <- p0$oval   v1 <- p0$oval*exp(logrr$oval)      # expected value of the distribution   .oval <- f_alpha_beta * (v0 * (1 - v0) + v1 * (1 - v1)) / (v0 - v1) ^ 2   names(.oval) <- \"rvar\"        #random function within a restricted environment where only   #the specified variables can be accesed within the function   .rfunc <- restrict_environment(      function(n) {        d_p0 = rfunc_p0(n)        d_p1 = d_p0 * exp(rfunc_logrr(n))        fab * (d_p0 * (1 - d_p0) + d_p1 * (1 - d_p1)) / (d_p0 - d_p1) ^ 2      },      rfunc_p0 = p0$rfunc,      rfunc_logrr = logrr$rfunc,      fab = f_alpha_beta   )   # Create the object with 4 slots   structure(     list(       distribution = \"SAMPLE_SIZE\",       seed = sample(1:2 ^ 15, 1),       oval = .oval,       rfunc = .rfunc     ),      class = c(\"SAMPLE_SIZE\",\"DISTRIBUTION\")   )    }"},{"path":"htinstatps://johnaponte.github.io/convdistr/articles/sample_size.html","id":"using-the-sample-size-object","dir":"Articles","previous_headings":"","what":"Using the Sample Size object","title":"Sample size with Uncertainty","text":"example, suppose incidence anaemia children 5 estimated survey 35% 95%CI (30%,40%), prevention treatment settings shown decrease anaemia 50% 95%CI(8% 73%). can define BETA distribution based CI NORMAL distribution log(RR) input distributions base can calculate distribution samples conditions  oval value distribution give us result obtain formula. conditions specified, sample size 95 required. However, distribution quite skewed can see mean median value far, standard deviation big. sample size require combinations low efficacy low prevalence large restriction low efficacy prevalence, although low frequency, happen simulations. empirical cumulative distribution values random sample distribution show us 208 subjects per arm, 80% possible scenarios covered","code":"d_p0 = new_BETA_lci(0.35,0.30,0.40) rr = log(1 - 50/100) sd = (log((1 - 8 / 100)) - log((1 - 73 / 100))) / 4 d_logrr = new_NORMAL(rr,sd) d_sample <- new_SAMPLE_SIZE(d_p0, d_logrr) rdrawn <- rfunc(d_sample, 10000) f_ecdf <- ecdf(rdrawn) n_80 = trunc(uniroot(function(x){f_ecdf(x) - 0.8}, interval = c(10,10000))$root)"},{"path":"htinstatps://johnaponte.github.io/convdistr/articles/sample_size.html","id":"enhance-the-sample-size-object","dir":"Articles","previous_headings":"","what":"Enhance the Sample Size object","title":"Sample size with Uncertainty","text":"function created show us distribution sample size, can’t inspect condition particular drawn obtained, .e. low prevalent anaemia value compensated high efficacy value? create second object drawns several dimensions, prevalence, RR sample size can make graph three values. following graph shows combination options lead sample size lower 150 subjects  see particular set conditions, possible 80% power prevalence range provided relative risk really lower 50%.","code":"#' Sample size for proportions, with uncertainty (V2) #'  #' Create an new DISTRIBUTION object that produce #' random drawns of the estimated sample size for #' two proportions as well as the samples from the parameters #' @param p0 a DISTRIBUTION object that drawns for proportions in control group #' @param logrr a DISTRIBUTION object that drawns log(RR) of the intervention #' @param alpha significant value #' @param beta  1-power new_SAMPLE_SIZE2 <- function(p0,logrr, alpha= 0.05, beta=0.2){   #checkings   stopifnot(inherits(p0,\"DISTRIBUTION\"))   stopifnot(inherits(logrr,\"DISTRIBUTION\"))   stopifnot(0 < alpha & alpha < 1)   stopifnot(0 < beta & beta < 1)   # function of alpha and beta   f_alpha_beta <- (qnorm(alpha/2,lower.tail = F) + qnorm(beta, lower.tail = F)) ^ 2       # The expected value of the distribution with default name for the dimension   # based on the oval value of the individual distributions     v0 <- p0$oval   v1 <- p0$oval*exp(logrr$oval)      # expected value of the distribution   ss <- f_alpha_beta * (v0 * (1 - v0) + v1 * (1 - v1)) / (v0 - v1) ^ 2   .oval = c(p0$oval, exp(logrr$oval), ss)   names(.oval) <- c('prevalence', 'rr', 'sample_size')        #random function within a restricted environment where only   #the specified variables can be accesed within the function   .rfunc <- restrict_environment(      function(n) {        d_p0 = rfunc_p0(n)        d_rr = exp(rfunc_logrr(n))        d_p1 = d_p0 * d_rr        d_ss = fab * (d_p0 * (1 - d_p0) + d_p1 * (1 - d_p1)) / (d_p0 - d_p1) ^ 2        matrix(          c(d_p0, d_rr, d_ss),           ncol = 3,           dimnames = list(1:n, c('prevalence','rr','sample_size')))      },      rfunc_p0 = p0$rfunc,      rfunc_logrr = logrr$rfunc,      fab = f_alpha_beta   )   # Create the object with 4 slots   structure(     list(       distribution = \"SAMPLE_SIZE2\",       seed = sample(1:2 ^ 15, 1),       oval = .oval,       rfunc = .rfunc     ),      class = c(\"SAMPLE_SIZE2\",\"DISTRIBUTION\")   )    } d_sample2 <- new_SAMPLE_SIZE2(d_p0, d_logrr) ss <- rfunc(d_sample2, 10000) df <- data.frame(ss) df$category = cut(df$sample_size, c(0,150,Inf),include.lowest = T, ordered_result = T) head(df) #>   prevalence        rr sample_size  category #> 1  0.3483842 0.6675019    237.1831 (150,Inf] #> 2  0.3258023 0.6026422    176.7633 (150,Inf] #> 3  0.3109274 0.6043177    190.2298 (150,Inf] #> 4  0.3465366 0.6425825    204.4184 (150,Inf] #> 5  0.3268810 0.9479958  11784.9100 (150,Inf] #> 6  0.3471314 0.5610876    129.6557   [0,150]"},{"path":"htinstatps://johnaponte.github.io/convdistr/articles/using-convdistr.html","id":"practical-example","dir":"Articles","previous_headings":"","what":"Practical example","title":"Using the convdistr package","text":"resulting distribution \\(+b*c\\) \\(\\) normal distribution mean 1 standard deviation 0.5, \\(b\\) poisson distribution lambda 5 \\(c\\) beta distribution shape parameters 10 20?  result distribution expected value 2.67. sample 10000 drawns distribution shows mean value 2.66, median 2.56 95% quantiles 0.98, 4.83 following sections describe DISTRIBUTION object, create new DISTRIBUTION objects make operations mixtures . Please note convoluting distributions, package assumes distributions independent , .e. correlation 0. , need implement specific distributions handle correlation, like MULTIVARIATE object.","code":"library(convdistr) library(ggplot2)  a <- new_NORMAL(1,0.5) b <- new_POISSON(5) c <- new_BETA(10,20) res <- a + b * c  metadata(res)  #>   distribution     rvar #> 1  CONVOLUTION 2.666667 summary(res) ggDISTRIBUTION(res) + ggtitle(\"a + b * c\") #> Warning: `stat(density)` was deprecated in ggplot2 3.4.0. #> ℹ Please use `after_stat(density)` instead. #> ℹ The deprecated feature was likely used in the convdistr package. #>   Please report the issue to the authors. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"htinstatps://johnaponte.github.io/convdistr/articles/using-convdistr.html","id":"description-of-the-distribution-object","dir":"Articles","previous_headings":"","what":"Description of the DISTRIBUTION object","title":"Using the convdistr package","text":"DISTRIBUTION kind abstract class (interface) specific constructors implement. contains 4 fields: distribution : character name distribution implemented seed : numerical seed use get repeatable sample summary function oval : observed value. value expected. used number mathematical operations distributions simple scalar rfunc(n) : function generate random numbers distribution. parameter n number drawns distribution. returns matrix many rows n, many columns dimensions distributions DISTRIBUTION object can support multidimensional distributions example dirichlet distribution. names dimensions coincides names oval vector. one dimension, default name rvar. expected rfunc included creation new distributions convolution mixture, environment carefully controlled avoid reference leaking possible within R language. reason, rfunc created within restrict_environment function controls variables required within function saved environment function. new objects instanced, fields immutable changed.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/articles/using-convdistr.html","id":"factory-of-distribution-objects","dir":"Articles","previous_headings":"","what":"Factory of DISTRIBUTION objects","title":"Using the convdistr package","text":"following functions create new objects class DISTRIBUTION","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/articles/using-convdistr.html","id":"methods","dir":"Articles","previous_headings":"","what":"Methods","title":"Using the convdistr package","text":"following methods objects class DISTRIBUTION metadata(x) Print metadata distribution summary(object, n=10000) Produce summary distribution rfunc(x, n) Generate n random drawns distribution plot(x, n= 10000) Produce density plot distribution ggDISTRIBUTION(x, n= 10000) produce density plot distribution using ggplot2 Figure R plot Figure ggplot2","code":"myDistr <- new_NORMAL(0,1) metadata(myDistr) #>   distribution rvar #> 1       NORMAL    0 rfunc(myDistr, 10) #>           rvar #> 1   0.33575345 #> 2   0.81343218 #> 3  -0.85065264 #> 4  -1.53721916 #> 5   0.38575828 #> 6   2.80150926 #> 7  -1.21145806 #> 8  -0.02824142 #> 9  -0.31291328 #> 10  0.97822165 summary(myDistr) plot(myDistr) ggDISTRIBUTION(myDistr)"},{"path":"htinstatps://johnaponte.github.io/convdistr/articles/using-convdistr.html","id":"convolution-for-distribution-with-the-same-dimensions","dir":"Articles","previous_headings":"","what":"Convolution for Distribution with the same dimensions","title":"Using the convdistr package","text":"Mathematical operations like +, -, *, / DISTRIBUTION dimensions can perform new_CONVOLUTION(listdistr, op, omit_NA = FALSE) function. listdistr parameter list DISTRIBUTION objects operation made. shorter version exists one operations follow new_SUM(listdistr, omit_NA = FALSE) new_SUBTRACTION(listdistr, omit_NA = FALSE) new_MULTIPLICATION(listdistr, omit_NA = FALSE) new_DIVISION(listdistr, omit_NA = FALSE) Mathematical operator can also used.","code":"d1 <- new_NORMAL(1,1) d2 <- new_UNIFORM(2,8) d3 <- new_POISSON(5) dsum <- new_SUM(list(d1,d2,d3)) dsum #>   distribution rvar #> 1  CONVOLUTION   11 d1 + d2 + d3 #>   distribution rvar #> 1  CONVOLUTION   11 summary(dsum) ggDISTRIBUTION(dsum)"},{"path":"htinstatps://johnaponte.github.io/convdistr/articles/using-convdistr.html","id":"mixture","dir":"Articles","previous_headings":"","what":"Mixture","title":"Using the convdistr package","text":"DISTRIBUTION, consisting mixture several distribution can obtained new_MIXTURE(listdistr, mixture) function listdistr list DISTRIBUTION objects mixture vector probabilities distribution. missing mixture, probability distribution.","code":"d1 <- new_NORMAL(1,0.5) d2 <- new_NORMAL(5,0.5) d3 <- new_NORMAL(10,0.5) dmix <- new_MIXTURE(list(d1,d2,d3)) summary(dmix) ggDISTRIBUTION(dmix)"},{"path":"htinstatps://johnaponte.github.io/convdistr/articles/using-convdistr.html","id":"convolution-of-distributions-with-different-dimensions","dir":"Articles","previous_headings":"","what":"Convolution of distributions with different dimensions","title":"Using the convdistr package","text":"convoluting distribution different dimensions, two possibilities. new_CONVOLUTION_assoc family functions perform operation common dimensions left others dimensions , new_CONVOLUTION_comb family functions perform operation combination dimensions.","code":"d1 <- new_MULTINORMAL(c(0,1), matrix(c(1,0.3,0.3,1), ncol = 2), p_dimnames = c(\"A\",\"B\")) d2 <- new_MULTINORMAL(c(3,4), matrix(c(1,0.3,0.3,1), ncol = 2), p_dimnames = c(\"B\",\"C\")) summary(d1) summary(d2) summary(new_SUM_assoc(d1,d2)) summary(new_SUM_comb(d1,d2))"},{"path":"htinstatps://johnaponte.github.io/convdistr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aponte John. Author, maintainer.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"John (2024). convdistr: Convolute Probabilistic Distributions. R package version 1.6.1, https://johnaponte.github.io/convdistr/, https://github.com/johnaponte/convdistr.","code":"@Manual{,   title = {convdistr: Convolute Probabilistic Distributions},   author = {Aponte John},   year = {2024},   note = {R package version 1.6.1, https://johnaponte.github.io/convdistr/},   url = {https://github.com/johnaponte/convdistr}, }"},{"path":"htinstatps://johnaponte.github.io/convdistr/index.html","id":"the-convdistr-package","dir":"","previous_headings":"","what":"Convolute Probabilistic Distributions","title":"Convolute Probabilistic Distributions","text":"convdistr package provide tools define distribution objects make mathematical operations . keep track results scalar numbers maintaining ability obtain randoms samples convoluted distributions. install package github devtools::install_github(\"johnaponte/convdistr\", build_manual = T, build_vignettes = T)","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/index.html","id":"practical-example","dir":"","previous_headings":"","what":"Practical example","title":"Convolute Probabilistic Distributions","text":"resulting distribution  + b * c normal distribution mean 1 standard deviation 0.5, b poisson distribution lambda 5 c beta distribution shape parameters 10 20?  result distribution expected value 2.67. sample 10000 drawns distribution shows mean value 2.66, median 2.56 95% quantiles 0.94, 4.95 following sections describe DISTRIBUTION object, create new DISTRIBUTION objects make operations mixtures . Please note convoluting distributions, package assumes distributions independent , .e. correlation 0. , need implement specific distributions handle correlation, like MULTIVARIATE object.","code":"library(convdistr) library(ggplot2)  a <- new_NORMAL(1,0.5) b <- new_POISSON(5) c <- new_BETA(10,20) res <- a + b * c  metadata(res)  #>   distribution     rvar #> 1  CONVOLUTION 2.666667 summary(res) ggDISTRIBUTION(res) + ggtitle(\"a + b * c\")"},{"path":"htinstatps://johnaponte.github.io/convdistr/index.html","id":"description-of-the-distribution-object","dir":"","previous_headings":"","what":"Description of the DISTRIBUTION object","title":"Convolute Probabilistic Distributions","text":"DISTRIBUTION kind abstract class (interface) specific constructors implement. contains 4 fields: distribution : character name distribution implemented seed : numerical seed use get repeatable sample summary function oval : observed value. value expected. used number mathematical operations distributions simple scalar rfunc(n) : function generate random numbers distribution. parameter n number drawns distribution. returns matrix many rows n, many columns dimensions distributions DISTRIBUTION object can support multidimensional distributions example dirichlet distribution. names dimensions coincides names oval vector. one dimension, default name rvar. expected rfunc included creation new distributions convolution mixture, environment carefully controlled avoid reference leaking possible within R language. reason, rfunc created within restrict_environment function controls variables required within function saved environment function. new objects instanced, fields immutable changed.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/index.html","id":"factory-of-distribution-objects","dir":"","previous_headings":"","what":"Factory of DISTRIBUTION objects","title":"Convolute Probabilistic Distributions","text":"following functions create new objects class DISTRIBUTION","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/index.html","id":"methods","dir":"","previous_headings":"","what":"Methods","title":"Convolute Probabilistic Distributions","text":"following methods objects class DISTRIBUTION metadata(x) Print metadata distribution summary(object, n=10000) Produce summary distribution rfunc(x, n) Generate n random drawns distribution plot(x, n= 10000) Produce density plot distribution ggDISTRIBUTION(x, n= 10000) produce density plot distribution using ggplot2","code":"myDistr <- new_NORMAL(0,1) metadata(myDistr) #>   distribution rvar #> 1       NORMAL    0 rfunc(myDistr, 10) #>            rvar #> 1  -0.202292246 #> 2   2.359176819 #> 3  -0.378977974 #> 4  -1.108465547 #> 5   0.080081266 #> 6  -0.001522165 #> 7   1.140359435 #> 8   0.220586273 #> 9   0.533860090 #> 10  1.450453816 summary(myDistr) plot(myDistr) ggDISTRIBUTION(myDistr)"},{"path":"htinstatps://johnaponte.github.io/convdistr/index.html","id":"convolution-for-distribution-with-the-same-dimensions","dir":"","previous_headings":"","what":"Convolution for Distribution with the same dimensions","title":"Convolute Probabilistic Distributions","text":"Mathematical operations like +, -, *, / DISTRIBUTION dimensions can perform new_CONVOLUTION(listdistr, op, omit_NA = FALSE) function. listdistr parameter list DISTRIBUTION objects operation made. shorter version exists one operations follow new_SUM(listdistr, omit_NA = FALSE) new_SUBTRACTION(listdistr, omit_NA = FALSE) new_MULTIPLICATION(listdistr, omit_NA = FALSE) new_DIVISION(listdistr, omit_NA = FALSE) Mathematical operator can also used.","code":"d1 <- new_NORMAL(1,1) d2 <- new_UNIFORM(2,8) d3 <- new_POISSON(5) dsum <- new_SUM(list(d1,d2,d3)) dsum #>   distribution rvar #> 1  CONVOLUTION   11 d1 + d2 + d3 #>   distribution rvar #> 1  CONVOLUTION   11 summary(dsum) ggDISTRIBUTION(dsum)"},{"path":"htinstatps://johnaponte.github.io/convdistr/index.html","id":"mixture","dir":"","previous_headings":"","what":"Mixture","title":"Convolute Probabilistic Distributions","text":"DISTRIBUTION, consisting mixture several distribution can obtained new_MIXTURE(listdistr, mixture) function listdistr list DISTRIBUTION objects mixture vector probabilities distribution. missing mixture, probability distribution.","code":"d1 <- new_NORMAL(1,0.5) d2 <- new_NORMAL(5,0.5) d3 <- new_NORMAL(10,0.5) dmix <- new_MIXTURE(list(d1,d2,d3)) summary(dmix) ggDISTRIBUTION(dmix)"},{"path":"htinstatps://johnaponte.github.io/convdistr/index.html","id":"convolution-of-distributions-with-different-dimensions","dir":"","previous_headings":"","what":"Convolution of distributions with different dimensions","title":"Convolute Probabilistic Distributions","text":"convoluting distribution different dimensions, two possibilities. new_CONVOLUTION_assoc family functions perform operation common dimensions left others dimensions , new_CONVOLUTION_comb family functions perform operation combination dimensions.","code":"d1 <- new_MULTINORMAL(c(0,1), matrix(c(1,0.3,0.3,1), ncol = 2), p_dimnames = c(\"A\",\"B\")) d2 <- new_MULTINORMAL(c(3,4), matrix(c(1,0.3,0.3,1), ncol = 2), p_dimnames = c(\"B\",\"C\")) summary(d1) summary(d2) summary(new_SUM_assoc(d1,d2)) summary(new_SUM_comb(d1,d2))"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BETA.html","id":null,"dir":"Reference","previous_headings":"","what":"Factory for a BETA distribution object — BETA","title":"Factory for a BETA distribution object — BETA","text":"Returns BETA distribution object produce random numbers  beta distribution using rbeta function","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BETA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factory for a BETA distribution object — BETA","text":"","code":"new_BETA(p_shape1, p_shape2, p_dimnames = \"rvar\")  new_BETA_lci(p_mean, p_lci, p_uci, p_dimnames = \"rvar\")  new_BETA_lci2(p_mean, p_lci, p_uci, p_dimnames = \"rvar\")"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BETA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factory for a BETA distribution object — BETA","text":"p_shape1 non-negative parameters Beta distribution p_shape2 non-negative parameters Beta distribution p_dimnames character represents name dimension p_mean numeric represents expected value proportion p_lci numeric lower 95% confidence interval p_uci numeric upper 95% confidence interval","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BETA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factory for a BETA distribution object — BETA","text":"object class DISTRIBUTION, BETA","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BETA.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Factory for a BETA distribution object — BETA","text":"new_BETA_lci(): Constructor based confidence intervals. Preserve expected value. new_BETA_lci2(): Constructor based ML confidence intervals","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BETA.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Factory for a BETA distribution object — BETA","text":"using confidence intervals, shape parameters obtained using following formula: \\(varp = (p_uci-p_lci)/4^2\\) \\(shape1 = p_mean * (p_mean * (1 - p_mean) / varp - 1)\\) \\(shape2 =(1 - p_mean) * (p_mean * (1 - p_mean) / varp - 1) \\) new_BETA_lci2 estimate parameters using maximum likelihood myDistr <- new_BETA_lci2(0.30,0.25,0.35) myDistr$rfunc(10)","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BETA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Factory for a BETA distribution object — BETA","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BETA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factory for a BETA distribution object — BETA","text":"","code":"myDistr <- new_BETA(1,1) myDistr$rfunc(10) #>          rvar #> 1  0.16566696 #> 2  0.84279156 #> 3  0.53360650 #> 4  0.71023276 #> 5  0.22747849 #> 6  0.82505937 #> 7  0.67961427 #> 8  0.80433017 #> 9  0.93633854 #> 10 0.02445216 myDistr <- new_BETA_lci(0.30,0.25,0.35) myDistr$rfunc(10) #>         rvar #> 1  0.3184059 #> 2  0.2510281 #> 3  0.3148597 #> 4  0.2428678 #> 5  0.2852765 #> 6  0.2985150 #> 7  0.3157819 #> 8  0.2738824 #> 9  0.3135334 #> 10 0.3104217"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BETABINOMIAL.html","id":null,"dir":"Reference","previous_headings":"","what":"Factory for a BETABINOMIAL distribution object — BETABINOMIAL","title":"Factory for a BETABINOMIAL distribution object — BETABINOMIAL","text":"Returns BETABINOMIAL distribution object produce random numbers  betabinomial distribution using rbbinom function","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BETABINOMIAL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factory for a BETABINOMIAL distribution object — BETABINOMIAL","text":"","code":"new_BETABINOMIAL(p_size, p_shape1, p_shape2, p_dimnames = \"rvar\")  new_BETABINOMIAL_od(p_size, p_mu, p_od, p_dimnames = \"rvar\")  new_BETABINOMIAL_icc(p_size, p_mu, p_icc, p_dimnames = \"rvar\")"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BETABINOMIAL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factory for a BETABINOMIAL distribution object — BETABINOMIAL","text":"p_size non-negative parameter number trials p_shape1 non-negative parameters Betabinomial distribution p_shape2 non-negative parameters Betabinomial distribution p_dimnames character represents name dimension p_mu mean proportion binomial part distribution p_od dispersion parameter p_icc intra-class correlation parameter","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BETABINOMIAL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factory for a BETABINOMIAL distribution object — BETABINOMIAL","text":"object class DISTRIBUTION, BETADISTRIBUION","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BETABINOMIAL.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Factory for a BETABINOMIAL distribution object — BETABINOMIAL","text":"new_BETABINOMIAL_od(): parametrization based dispersion new_BETABINOMIAL_icc(): parametrization based intra-class correlation","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BETABINOMIAL.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Factory for a BETABINOMIAL distribution object — BETABINOMIAL","text":"several parametrization betabinomial distribution. one based shape1 shape2 parameters alpha beta beta part distribution, can parametrized mu, od mu  expected mean proportion od measure overdispersion. \\(p_mu = p_shape1/(p_shape1 + p_shape2)\\) \\(p_od = p_shape1 + p_shape2\\) \\(p_shape1 = p_mu*p_od\\) \\(p_shape2 <- (1-p_mu)*p_od\\) Another parametrization based mu icc mu mean proportion icc intra-class correlation. \\(p_mu = p_shape1/(p_shape1 + p_shape2)\\) \\(p_icc = 1/(p_shape1 + p_shape2 + 1)\\) \\(p_shape1 = p_mu*(1-p_icc)/p_icc\\) \\(p_shape2 = (1-p_mu)*(1-p_icc)/p_icc\\)","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BETABINOMIAL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Factory for a BETABINOMIAL distribution object — BETABINOMIAL","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BETABINOMIAL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factory for a BETABINOMIAL distribution object — BETABINOMIAL","text":"","code":"myDistr <- new_BETABINOMIAL(10,1,1) myDistr$rfunc(10) #>    rvar #> 1     6 #> 2     0 #> 3     7 #> 4     6 #> 5     2 #> 6     2 #> 7     8 #> 8     0 #> 9     8 #> 10   10"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BINOMIAL.html","id":null,"dir":"Reference","previous_headings":"","what":"Factory for a BINOMIAL distribution object — BINOMIAL","title":"Factory for a BINOMIAL distribution object — BINOMIAL","text":"Returns BINOMIAL distribution object produce random numbers binomial distribution using rbinom function","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BINOMIAL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factory for a BINOMIAL distribution object — BINOMIAL","text":"","code":"new_BINOMIAL(p_size, p_prob, p_dimnames = \"rvar\")"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BINOMIAL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factory for a BINOMIAL distribution object — BINOMIAL","text":"p_size integer represent number trials p_prob probability success p_dimnames character represents name dimension","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BINOMIAL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factory for a BINOMIAL distribution object — BINOMIAL","text":"object class DISTRIBUTION, BINOMIAL","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BINOMIAL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Factory for a BINOMIAL distribution object — BINOMIAL","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/BINOMIAL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factory for a BINOMIAL distribution object — BINOMIAL","text":"","code":"myDistr <- new_BINOMIAL(1000,0.3) myDistr$rfunc(10) #>    rvar #> 1   300 #> 2   313 #> 3   305 #> 4   303 #> 5   294 #> 6   311 #> 7   273 #> 8   298 #> 9   283 #> 10  300"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the convolution of two or more DISTRIBUTION objects — CONVOLUTION","title":"Make the convolution of two or more DISTRIBUTION objects — CONVOLUTION","text":"convolution simple algebraic operations made operation individual drawns distributions. DISTRIBUTION objects must dimensions.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the convolution of two or more DISTRIBUTION objects — CONVOLUTION","text":"","code":"new_CONVOLUTION(listdistr, op, omit_NA = FALSE)  new_SUM(..., omit_NA = FALSE)  # S3 method for DISTRIBUTION +(e1, e2)  new_SUBTRACTION(..., omit_NA = FALSE)  # S3 method for DISTRIBUTION -(e1, e2)  new_MULTIPLICATION(..., omit_NA = FALSE)  # S3 method for DISTRIBUTION *(e1, e2)  new_DIVISION(..., omit_NA = FALSE)  # S3 method for DISTRIBUTION /(e1, e2)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the convolution of two or more DISTRIBUTION objects — CONVOLUTION","text":"listdistr list DISTRIBUTION objects op function convolute `+`, `-`, `*`, `\\` omit_NA TRUE, NA distributions omitted ... DISTRIBUTION objects list distribution objects e1 object class DISTRIBUTION e2 object class DISTRIBUTION","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the convolution of two or more DISTRIBUTION objects — CONVOLUTION","text":"object class CONVOLUTION, DISTRIBUTION","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make the convolution of two or more DISTRIBUTION objects — CONVOLUTION","text":"distributions class NA (NA_DISTRIBUTION) result new distribution class NA unless  omit_NA option set TRUE","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Make the convolution of two or more DISTRIBUTION objects — CONVOLUTION","text":"new_SUM(): Sum distributions new_SUBTRACTION(): Subtraction distributions new_MULTIPLICATION(): Multiplication distributions new_DIVISION(): DIVISION distributions","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make the convolution of two or more DISTRIBUTION objects — CONVOLUTION","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the convolution of two or more DISTRIBUTION objects — CONVOLUTION","text":"","code":"x1 <- new_NORMAL(0,1) x2 <- new_UNIFORM(1,2) new_CONVOLUTION(list(x1,x2), `+`) #>   distribution rvar #> 1  CONVOLUTION  1.5 new_SUM(x1,x2) #>   distribution rvar #> 1  CONVOLUTION  1.5 x1 + x2 #>   distribution rvar #> 1  CONVOLUTION  1.5 new_SUBTRACTION(x1,x2) #>   distribution rvar #> 1  CONVOLUTION -1.5 x1 - x2 #>   distribution rvar #> 1  CONVOLUTION -1.5 new_MULTIPLICATION(list(x1,x2)) #>   distribution rvar #> 1  CONVOLUTION    0 x1 * x2 #>   distribution rvar #> 1  CONVOLUTION    0 new_DIVISION(list(x1,x2)) #>   distribution rvar #> 1  CONVOLUTION    0 x1 / x2 #>   distribution rvar #> 1  CONVOLUTION    0"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION_assoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Convolution with association of dimensions — CONVOLUTION_assoc","title":"Convolution with association of dimensions — CONVOLUTION_assoc","text":"case different dimensions distribution function perform operation common distributions add without modifications dimensions distribution.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION_assoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convolution with association of dimensions — CONVOLUTION_assoc","text":"","code":"new_CONVOLUTION_assoc(dist1, dist2, op)  new_SUM_assoc(dist1, dist2)  new_SUBTRACTION_assoc(dist1, dist2)  new_MULTIPLICATION_assoc(dist1, dist2)  new_DIVISION_assoc(dist1, dist2)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION_assoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convolution with association of dimensions — CONVOLUTION_assoc","text":"dist1 object class DISTRIBUTION dist2 object class DISTRIBUTION op one `+`,`-`,`*`,`/`","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION_assoc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convolution with association of dimensions — CONVOLUTION_assoc","text":"object class DISTRIBUTION","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION_assoc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convolution with association of dimensions — CONVOLUTION_assoc","text":"distribution dimensions b distribution B dimensions b c, + B produce distribution dimensions , c,  b+b,","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION_assoc.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Convolution with association of dimensions — CONVOLUTION_assoc","text":"new_SUM_assoc(): Sum distributions new_SUBTRACTION_assoc(): Subtraction distributions new_MULTIPLICATION_assoc(): Multiplication distributions new_DIVISION_assoc(): Division distributions","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION_assoc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convolution with association of dimensions — CONVOLUTION_assoc","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION_assoc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convolution with association of dimensions — CONVOLUTION_assoc","text":"","code":"x1 <- new_MULTINORMAL(c(0,1), matrix(c(1,0.5,0.5,1),ncol=2), p_dimnames = c(\"A\",\"B\")) x2 <- new_MULTINORMAL(c(10,1), matrix(c(1,0.4,0.4,1),ncol=2), p_dimnames = c(\"B\",\"C\")) new_CONVOLUTION_assoc(x1,x2, `+`) #>   distribution A C  B #> 1  CONVOLUTION 0 1 11 new_SUM_assoc(x1,x2) #>   distribution A C  B #> 1  CONVOLUTION 0 1 11 new_SUBTRACTION_assoc(x1,x2) #>   distribution A C  B #> 1  CONVOLUTION 0 1 -9 new_MULTIPLICATION_assoc(x1,x2) #>   distribution A C  B #> 1  CONVOLUTION 0 1 10 new_DIVISION_assoc(x1,x2) #>   distribution A C   B #> 1  CONVOLUTION 0 1 0.1"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION_comb.html","id":null,"dir":"Reference","previous_headings":"","what":"Convolution with combination of dimensions — CONVOLUTION_comb","title":"Convolution with combination of dimensions — CONVOLUTION_comb","text":"case different dimensions distribution function perform operation combination distributions distribution.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION_comb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convolution with combination of dimensions — CONVOLUTION_comb","text":"","code":"new_CONVOLUTION_comb(dist1, dist2, op, p_dimnames)  new_SUM_comb(dist1, dist2)  new_SUBTRACTION_comb(dist1, dist2)  new_MULTIPLICATION_comb(dist1, dist2)  new_DIVISION_comb(dist1, dist2)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION_comb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convolution with combination of dimensions — CONVOLUTION_comb","text":"dist1 object class DISTRIBUTION dist2 object class DISTRIBUTION op one `+`,`-`,`*`,`/` p_dimnames character vector name dimensions. missing combination individual dimensions used","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION_comb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convolution with combination of dimensions — CONVOLUTION_comb","text":"object class DISTRIBUTION","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION_comb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convolution with combination of dimensions — CONVOLUTION_comb","text":"distribution dimensions b distribution B dimensions b c, + B produce distribution dimensions a_b,a_c,b_b, b_c","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION_comb.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Convolution with combination of dimensions — CONVOLUTION_comb","text":"new_SUM_comb(): Sum distributions new_SUBTRACTION_comb(): Subtraction distributions new_MULTIPLICATION_comb(): Multiplication distributions new_DIVISION_comb(): Division distributions","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION_comb.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convolution with combination of dimensions — CONVOLUTION_comb","text":"case dimensions, first combination taken","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION_comb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convolution with combination of dimensions — CONVOLUTION_comb","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/CONVOLUTION_comb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convolution with combination of dimensions — CONVOLUTION_comb","text":"","code":"x1 <- new_MULTINORMAL(c(0,1), matrix(c(1,0.5,0.5,1),ncol=2), p_dimnames = c(\"A\",\"B\")) x2 <- new_MULTINORMAL(c(10,1), matrix(c(1,0.4,0.4,1),ncol=2), p_dimnames = c(\"B\",\"C\")) new_CONVOLUTION_comb(x1,x2, `+`) #>   distribution A_B B_B A_C B_C #> 1  CONVOLUTION  10  11   1   2 new_SUM_comb(x1,x2) #>   distribution A_B B_B A_C B_C #> 1  CONVOLUTION  10  11   1   2 new_SUBTRACTION_comb(x1,x2) #>   distribution A_B B_B A_C B_C #> 1  CONVOLUTION -10  -9  -1   0 new_MULTIPLICATION_comb(x1,x2) #>   distribution A_B B_B A_C B_C #> 1  CONVOLUTION   0  10   0   1 new_DIVISION_comb(x1,x2) #>   distribution A_B B_B A_C B_C #> 1  CONVOLUTION   0 0.1   0   1"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DIRAC.html","id":null,"dir":"Reference","previous_headings":"","what":"Factory for a DIRAC distribution object — DIRAC","title":"Factory for a DIRAC distribution object — DIRAC","text":"Returns DIRAC distribution object always return number, matrix numbers case multiple dimensions setup","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DIRAC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factory for a DIRAC distribution object — DIRAC","text":"","code":"new_DIRAC(p_scalar, p_dimnames = \"rvar\")"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DIRAC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factory for a DIRAC distribution object — DIRAC","text":"p_scalar numeric set value distribution p_dimnames character represents name dimension","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DIRAC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factory for a DIRAC distribution object — DIRAC","text":"object class DISTRIBUTION, DIRAC","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DIRAC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Factory for a DIRAC distribution object — DIRAC","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DIRAC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factory for a DIRAC distribution object — DIRAC","text":"","code":"myDistr <- new_DIRAC(1) myDistr$rfunc(10) #>    rvar #> 1     1 #> 2     1 #> 3     1 #> 4     1 #> 5     1 #> 6     1 #> 7     1 #> 8     1 #> 9     1 #> 10    1"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DIRICHLET.html","id":null,"dir":"Reference","previous_headings":"","what":"Factory for a DIRICHLET distribution object — DIRICHLET","title":"Factory for a DIRICHLET distribution object — DIRICHLET","text":"Returns DIRICHLET distribution object draw random numbers generated function rdirichlet","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DIRICHLET.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factory for a DIRICHLET distribution object — DIRICHLET","text":"","code":"new_DIRICHLET(p_alpha, p_dimnames)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DIRICHLET.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factory for a DIRICHLET distribution object — DIRICHLET","text":"p_alpha k-value vector concentration parameter. Must positive p_dimnames vector characters names k-dimensions","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DIRICHLET.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factory for a DIRICHLET distribution object — DIRICHLET","text":"object class DISTRIBUTION,  p_distribution$distribution, TRUNCATED","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DIRICHLET.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Factory for a DIRICHLET distribution object — DIRICHLET","text":"name can provided dimensions. Otherwise rvar1, rvar2, ..., rvark assigned","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DIRICHLET.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Factory for a DIRICHLET distribution object — DIRICHLET","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DIRICHLET.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factory for a DIRICHLET distribution object — DIRICHLET","text":"","code":"myDistr <- new_DIRICHLET(c(0.3,0.2,0.5), c(\"a\",\"b\",\"c\")) myDistr$rfunc(10) #>                  a            b          c #>  [1,] 2.834620e-02 7.977581e-01 0.17389571 #>  [2,] 9.329120e-01 1.854465e-04 0.06690251 #>  [3,] 9.208111e-02 6.947831e-03 0.90097105 #>  [4,] 5.875897e-03 8.315553e-01 0.16256884 #>  [5,] 1.761448e-04 8.848907e-06 0.99981501 #>  [6,] 4.244494e-02 1.050434e-02 0.94705072 #>  [7,] 6.597308e-01 1.340890e-03 0.33892826 #>  [8,] 2.472067e-03 2.220340e-01 0.77549396 #>  [9,] 1.589457e-05 3.504001e-02 0.96494410 #> [10,] 3.879569e-01 1.898114e-01 0.42223173"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DISCRETE.html","id":null,"dir":"Reference","previous_headings":"","what":"Factory for a DISCRETE distribution object — DISCRETE","title":"Factory for a DISCRETE distribution object — DISCRETE","text":"Returns DISCRETE distribution object sample vector p_supp options probability vector probabilities p_prob.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DISCRETE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factory for a DISCRETE distribution object — DISCRETE","text":"","code":"new_DISCRETE(p_supp, p_prob, p_dimnames = \"rvar\")"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DISCRETE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factory for a DISCRETE distribution object — DISCRETE","text":"p_supp numeric vector options p_prob numeric vector probabilities. p_dimnames character represents name dimension","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DISCRETE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factory for a DISCRETE distribution object — DISCRETE","text":"object class DISTRIBUTION, DISCRETE","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DISCRETE.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Factory for a DISCRETE distribution object — DISCRETE","text":"second argument missing, options sample  equal probability. provided, second argument add 1 must  length first argument","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DISCRETE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Factory for a DISCRETE distribution object — DISCRETE","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DISCRETE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factory for a DISCRETE distribution object — DISCRETE","text":"","code":"myDistr <- new_DISCRETE(p_supp=c(1,2,3,4), p_prob=c(0.40,0.30,0.20,0.10)) myDistr$rfunc(10) #>    rvar #> 1     2 #> 2     1 #> 3     4 #> 4     1 #> 5     1 #> 6     2 #> 7     1 #> 8     1 #> 9     4 #> 10    3"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DISTRIBUTION.html","id":null,"dir":"Reference","previous_headings":"","what":"DISTRIBUTION class — DISTRIBUTION","title":"DISTRIBUTION class — DISTRIBUTION","text":"DISTRIBUTION kind abstract class (interface) specific constructors implement.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DISTRIBUTION.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DISTRIBUTION class — DISTRIBUTION","text":"DISTRIBUTION object","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DISTRIBUTION.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DISTRIBUTION class — DISTRIBUTION","text":"contains 4 fields distribution character name distribution implemented seed numerical used details produce  reproducible details distribution oval Observed value. value expected. used  number mathematical operations distributions  simple scalar rfunc function generate random numbers distribution.  parameter n number draws distribution.  returns matrix many rows n, many columns  dimensions distributions DISTRIBUTION objects support multidimensional distributions example  DIRICHLET. names dimensions coincides names oval vector. one dimension, default name rvar. expected rfunc included creation new distributions convolution environment carefully controlled avoid reference leaking possible within R language. reason, rfunc created within restrict_environment function object instanced, fields immutable changed. seed needs modified, new object can created using set_seed function Objects defined following distributions UNIFORM NORMAL BETA TRIANGULAR POISSON EXPONENTIAL DISCRETE DIRAC DIRICHLET TRUNCATED NA_DISTRIBUTION","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DISTRIBUTION.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DISTRIBUTION class — DISTRIBUTION","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DISTRIBUTION_factory.html","id":null,"dir":"Reference","previous_headings":"","what":"A factory of DISTRIBUTION classes — DISTRIBUTION_factory","title":"A factory of DISTRIBUTION classes — DISTRIBUTION_factory","text":"Generate function creates DISTRIBUTION objects","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DISTRIBUTION_factory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A factory of DISTRIBUTION classes — DISTRIBUTION_factory","text":"","code":"DISTRIBUTION_factory(distname, rfunction, ovalfunc)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DISTRIBUTION_factory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A factory of DISTRIBUTION classes — DISTRIBUTION_factory","text":"distname name distribution. convention upper case rfunction function generate random numbers distribution ovalfunc function calculate oval value, used arguments rfunction","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DISTRIBUTION_factory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A factory of DISTRIBUTION classes — DISTRIBUTION_factory","text":"function able create DISTRIBUTION objects.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DISTRIBUTION_factory.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"A factory of DISTRIBUTION classes — DISTRIBUTION_factory","text":"function return new function, arguments formals rfunction plus new argument dimnames dimension names. distribution unidimensional, default value   dimnames = \"rvar\"  works well, , dimnames  argument specified generated function used  example new_MyDIRICHLET","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DISTRIBUTION_factory.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A factory of DISTRIBUTION classes — DISTRIBUTION_factory","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/DISTRIBUTION_factory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A factory of DISTRIBUTION classes — DISTRIBUTION_factory","text":"","code":"new_MYDISTR <- DISTRIBUTION_factory(\"MYDISTR\", rnorm, function(){mean}) d1 <- new_MYDISTR(0,1) summary(d1) #>   distribution varname oval nsample        mean_      sd_      lci_     median_ #> 1      MYDISTR    rvar    0   10000 -0.009858114 1.012276 -2.000773 -0.01710083 #>       uci_ #> 1 1.989833 require(extraDistr) #> Loading required package: extraDistr new_MyDIRICHLET <- DISTRIBUTION_factory('rdirichlet',                        rdirichlet,                        function() {                          salpha = sum(alpha)                          alpha / salpha                        }) d2 <- new_MyDIRICHLET(c(10, 20, 70), dimnames = c(\"A\", \"B\", \"C\")) summary(d2) #>   distribution varname oval nsample      mean_        sd_       lci_    median_ #> 1   RDIRICHLET       A  0.1   10000 0.09965909 0.02975184 0.04904405 0.09726064 #> 2   RDIRICHLET       B  0.2   10000 0.20059369 0.03940919 0.12952533 0.19847332 #> 3   RDIRICHLET       C  0.7   10000 0.69974721 0.04472281 0.60793637 0.70023936 #>        uci_ #> 1 0.1647623 #> 2 0.2819681 #> 3 0.7834416"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/EXPONENTIAL.html","id":null,"dir":"Reference","previous_headings":"","what":"Factory for a EXPONENTIAL distribution using confidence intervals — EXPONENTIAL","title":"Factory for a EXPONENTIAL distribution using confidence intervals — EXPONENTIAL","text":"Returns EXPONENTIAL distribution object produce random numbers exponential distribution using rexp function","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/EXPONENTIAL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factory for a EXPONENTIAL distribution using confidence intervals — EXPONENTIAL","text":"","code":"new_EXPONENTIAL(p_rate, p_dimnames = \"rvar\")"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/EXPONENTIAL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factory for a EXPONENTIAL distribution using confidence intervals — EXPONENTIAL","text":"p_rate numeric represents rate events p_dimnames character represents name dimension","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/EXPONENTIAL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factory for a EXPONENTIAL distribution using confidence intervals — EXPONENTIAL","text":"object class DISTRIBUTION, EXPONENTIAL","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/EXPONENTIAL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Factory for a EXPONENTIAL distribution using confidence intervals — EXPONENTIAL","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/EXPONENTIAL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factory for a EXPONENTIAL distribution using confidence intervals — EXPONENTIAL","text":"","code":"myDistr <- new_EXPONENTIAL(5) myDistr$rfunc(10) #>          rvar #> 1  0.52285312 #> 2  0.24930924 #> 3  0.35302189 #> 4  0.07629034 #> 5  0.07008340 #> 6  0.02720180 #> 7  0.24830646 #> 8  0.06013756 #> 9  0.12583848 #> 10 0.44297558"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/LOGNORMAL.html","id":null,"dir":"Reference","previous_headings":"","what":"Factory for a LOGNORMAL distribution object — LOGNORMAL","title":"Factory for a LOGNORMAL distribution object — LOGNORMAL","text":"Returns LOGNORMAL distribution object produce random numbers log normal distribution using rlnorm function","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/LOGNORMAL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factory for a LOGNORMAL distribution object — LOGNORMAL","text":"","code":"new_LOGNORMAL(p_meanlog, p_sdlog, p_dimnames = \"rvar\")"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/LOGNORMAL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factory for a LOGNORMAL distribution object — LOGNORMAL","text":"p_meanlog mean distribution log scale p_sdlog numeric represents standard deviation log scale p_dimnames character represents name dimension","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/LOGNORMAL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factory for a LOGNORMAL distribution object — LOGNORMAL","text":"object class DISTRIBUTION, LOGNORMAL","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/LOGNORMAL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Factory for a LOGNORMAL distribution object — LOGNORMAL","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/LOGNORMAL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factory for a LOGNORMAL distribution object — LOGNORMAL","text":"","code":"myDistr <- new_LOGNORMAL(0,1) myDistr$rfunc(10) #>         rvar #> 1  2.0493543 #> 2  1.1410058 #> 3  0.1547532 #> 4  0.3982548 #> 5  3.3335205 #> 6  1.3063900 #> 7  0.1652559 #> 8  0.2681154 #> 9  0.7877722 #> 10 0.3188200"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/NA_DISTRIBUTION.html","id":null,"dir":"Reference","previous_headings":"","what":"Factory for a NA distribution object — NA_DISTRIBUTION","title":"Factory for a NA distribution object — NA_DISTRIBUTION","text":"Returns NA distribution object always return NA_real_ useful handle NA. default one dimension rvar produced, several names provided columns added return matrix","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/NA_DISTRIBUTION.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factory for a NA distribution object — NA_DISTRIBUTION","text":"","code":"new_NA(p_dimnames = \"rvar\")"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/NA_DISTRIBUTION.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factory for a NA distribution object — NA_DISTRIBUTION","text":"p_dimnames character represents names dimensions. default one dimension name rvar","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/NA_DISTRIBUTION.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factory for a NA distribution object — NA_DISTRIBUTION","text":"object class DISTRIBUTION, NA","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/NA_DISTRIBUTION.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Factory for a NA distribution object — NA_DISTRIBUTION","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/NA_DISTRIBUTION.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factory for a NA distribution object — NA_DISTRIBUTION","text":"","code":"myDistr <- new_NA(p_dimnames = \"rvar\") myDistr$rfunc(10) #>    rvar #> 1    NA #> 2    NA #> 3    NA #> 4    NA #> 5    NA #> 6    NA #> 7    NA #> 8    NA #> 9    NA #> 10   NA"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/NORMAL.html","id":null,"dir":"Reference","previous_headings":"","what":"Factory for a NORMAL distribution object — NORMAL","title":"Factory for a NORMAL distribution object — NORMAL","text":"Returns NORMAL distribution object produce random numbers normal distribution using rnorm function","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/NORMAL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factory for a NORMAL distribution object — NORMAL","text":"","code":"new_NORMAL(p_mean, p_sd, p_dimnames = \"rvar\")"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/NORMAL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factory for a NORMAL distribution object — NORMAL","text":"p_mean numeric represents mean value p_sd numeric represents standard deviation p_dimnames character represents name dimension","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/NORMAL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factory for a NORMAL distribution object — NORMAL","text":"object class DISTRIBUTION, NORMAL","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/NORMAL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Factory for a NORMAL distribution object — NORMAL","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/NORMAL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factory for a NORMAL distribution object — NORMAL","text":"","code":"myDistr <- new_NORMAL(0,1) myDistr$rfunc(10) #>          rvar #> 1  -0.8277689 #> 2   0.9443376 #> 3  -0.6396930 #> 4  -2.1762304 #> 5  -0.2171446 #> 6   0.5799148 #> 7   1.9571700 #> 8  -0.9526035 #> 9  -1.8673853 #> 10 -0.9676737"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/POISSON.html","id":null,"dir":"Reference","previous_headings":"","what":"Factory for a POISSON distribution using confidence intervals — POISSON","title":"Factory for a POISSON distribution using confidence intervals — POISSON","text":"Returns POISSON distribution object produce random numbers Poisson distribution using rpois function","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/POISSON.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factory for a POISSON distribution using confidence intervals — POISSON","text":"","code":"new_POISSON(p_lambda, p_dimnames = \"rvar\")"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/POISSON.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factory for a POISSON distribution using confidence intervals — POISSON","text":"p_lambda numeric represents expected number events p_dimnames character represents name dimension","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/POISSON.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factory for a POISSON distribution using confidence intervals — POISSON","text":"object class DISTRIBUTION, POISSON","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/POISSON.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Factory for a POISSON distribution using confidence intervals — POISSON","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/POISSON.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factory for a POISSON distribution using confidence intervals — POISSON","text":"","code":"myDistr <- new_POISSON(5) myDistr$rfunc(10) #>    rvar #> 1     7 #> 2     9 #> 3     4 #> 4     3 #> 5     5 #> 6     7 #> 7     1 #> 8     6 #> 9     3 #> 10    1"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/TRIANGULAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Factory for a TRIANGULAR distribution object — TRIANGULAR","title":"Factory for a TRIANGULAR distribution object — TRIANGULAR","text":"Returns TRIANGULAR distribution object produce random numbers  triangular distribution using rtriang function","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/TRIANGULAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factory for a TRIANGULAR distribution object — TRIANGULAR","text":"","code":"new_TRIANGULAR(p_min, p_max, p_mode, p_dimnames = \"rvar\")"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/TRIANGULAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factory for a TRIANGULAR distribution object — TRIANGULAR","text":"p_min numeric represents lower limit p_max numeric represents upper limit p_mode numeric represents mode p_dimnames character represents name dimension","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/TRIANGULAR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factory for a TRIANGULAR distribution object — TRIANGULAR","text":"object class DISTRIBUTION, TRIANGULAR","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/TRIANGULAR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Factory for a TRIANGULAR distribution object — TRIANGULAR","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/TRIANGULAR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factory for a TRIANGULAR distribution object — TRIANGULAR","text":"","code":"myDistr <- new_TRIANGULAR(-1,1,0) myDistr$rfunc(10) #>          rvar #> 1   0.3280044 #> 2  -0.2851795 #> 3   0.4051558 #> 4   0.3846745 #> 5  -0.2390348 #> 6   0.4649872 #> 7   0.4261622 #> 8   0.3723790 #> 9   0.2476544 #> 10  0.0596358"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/TRUNCATED.html","id":null,"dir":"Reference","previous_headings":"","what":"Factory for a TRUNCATED distribution object — TRUNCATED","title":"Factory for a TRUNCATED distribution object — TRUNCATED","text":"Returns TRUNCATED distribution object limits values generated distribution limits p_min, p_max","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/TRUNCATED.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factory for a TRUNCATED distribution object — TRUNCATED","text":"","code":"new_TRUNCATED(p_distribution, p_min = -Inf, p_max = Inf)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/TRUNCATED.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factory for a TRUNCATED distribution object — TRUNCATED","text":"p_distribution object class DISTRIBUTION truncate p_min numeric set lower limit distribution p_max numeric set upper limit distribution","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/TRUNCATED.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factory for a TRUNCATED distribution object — TRUNCATED","text":"object class DISTRIBUTION,  p_distribution$distribution, TRUNCATED","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/TRUNCATED.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Factory for a TRUNCATED distribution object — TRUNCATED","text":"expected value truncated distribution different expected value unrestricted distribution. careful oval field changed may represent expected value distribution. distribution multidimensional, limits apply dimensions.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/TRUNCATED.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Factory for a TRUNCATED distribution object — TRUNCATED","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/TRUNCATED.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factory for a TRUNCATED distribution object — TRUNCATED","text":"","code":"myDistr <- new_TRUNCATED(p_distribution = new_NORMAL(0,1), p_min = -1, p_max = 1) myDistr$rfunc(10) #>          rvar #> 1   0.8419704 #> 2  -1.0000000 #> 3   0.2641659 #> 4   0.0973107 #> 5   1.0000000 #> 6  -0.9886828 #> 7   1.0000000 #> 8   1.0000000 #> 9  -1.0000000 #> 10  0.3704322"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/UNIFORM.html","id":null,"dir":"Reference","previous_headings":"","what":"Factory for a UNIFORM distribution object — UNIFORM","title":"Factory for a UNIFORM distribution object — UNIFORM","text":"Returns UNIFORM distribution object produce random numbers  uniform distribution using runif function","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/UNIFORM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factory for a UNIFORM distribution object — UNIFORM","text":"","code":"new_UNIFORM(p_min, p_max, p_dimnames = \"rvar\")"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/UNIFORM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factory for a UNIFORM distribution object — UNIFORM","text":"p_min numeric represents lower limit p_max numeric represents upper limit p_dimnames character represents name dimension","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/UNIFORM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factory for a UNIFORM distribution object — UNIFORM","text":"object class DISTRIBUTION, UNIFORM","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/UNIFORM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Factory for a UNIFORM distribution object — UNIFORM","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/UNIFORM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factory for a UNIFORM distribution object — UNIFORM","text":"","code":"myDistr <- new_UNIFORM(0,1) myDistr$rfunc(10) #>            rvar #> 1  0.8558819662 #> 2  0.5403376815 #> 3  0.8734173523 #> 4  0.5155856195 #> 5  0.8694592980 #> 6  0.8565225946 #> 7  0.3456831840 #> 8  0.0001036914 #> 9  0.2051797453 #> 10 0.9452204907"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/add_total.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds a total dimension — add_total","title":"Adds a total dimension — add_total","text":"function returns DISTRIBUTION new dimension created row sum dimensions distribution.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/add_total.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds a total dimension — add_total","text":"","code":"add_total(p_distribution, p_totalname = \"TOTAL\")"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/add_total.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds a total dimension — add_total","text":"p_distribution object class DISTRIBUTION p_totalname name new dimension","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/add_total.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds a total dimension — add_total","text":"DISTRIBUTION","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/add_total.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds a total dimension — add_total","text":"works multidimensional distributions.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/add_total.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adds a total dimension — add_total","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/add_total.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds a total dimension — add_total","text":"","code":"d1 <- new_DIRICHLET(c(0.2,0.5,0.3)) d2 <- add_total(d1)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.DIRAC.html","id":null,"dir":"Reference","previous_headings":"","what":"And optimized version for DIRAC distributions — cinqnum.DIRAC","title":"And optimized version for DIRAC distributions — cinqnum.DIRAC","text":"optimized version DIRAC distributions","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.DIRAC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"And optimized version for DIRAC distributions — cinqnum.DIRAC","text":"","code":"# S3 method for DIRAC cinqnum(x, n)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.DIRAC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"And optimized version for DIRAC distributions — cinqnum.DIRAC","text":"x object  class DISTRIBUTION n number drawns","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.DIRAC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"And optimized version for DIRAC distributions — cinqnum.DIRAC","text":"list NA","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.DIRAC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"And optimized version for DIRAC distributions — cinqnum.DIRAC","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.DISTRIBUTION.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for a distribution — cinqnum.DISTRIBUTION","title":"Generic function for a distribution — cinqnum.DISTRIBUTION","text":"Generate n random numbers distribution, using seed object, always return value. Internal function used summary","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.DISTRIBUTION.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for a distribution — cinqnum.DISTRIBUTION","text":"","code":"# S3 method for DISTRIBUTION cinqnum(x, n)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.DISTRIBUTION.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for a distribution — cinqnum.DISTRIBUTION","text":"x object  class DISTRIBUTION n number drawns","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.DISTRIBUTION.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for a distribution — cinqnum.DISTRIBUTION","text":"list  mean, sd, 95","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.DISTRIBUTION.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generic function for a distribution — cinqnum.DISTRIBUTION","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.NA.html","id":null,"dir":"Reference","previous_headings":"","what":"And optimized version for NA distribution — cinqnum.NA","title":"And optimized version for NA distribution — cinqnum.NA","text":"optimized version NA distribution","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.NA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"And optimized version for NA distribution — cinqnum.NA","text":"","code":"# S3 method for `NA` cinqnum(x, n)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.NA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"And optimized version for NA distribution — cinqnum.NA","text":"x object  class DISTRIBUTION n number drawns","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.NA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"And optimized version for NA distribution — cinqnum.NA","text":"list NA","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.NA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"And optimized version for NA distribution — cinqnum.NA","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.html","id":null,"dir":"Reference","previous_headings":"","what":"cinqnum — cinqnum","title":"cinqnum — cinqnum","text":"Make list 5 numbers distribution (mean_, sd_, lci_, uci_, median_).","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cinqnum — cinqnum","text":"","code":"cinqnum(x, ...)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cinqnum — cinqnum","text":"x object class DISTRIBUTION ... parameters","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cinqnum — cinqnum","text":"vector mean, sd, lci, uci median values","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"cinqnum — cinqnum","text":"Uses stored seed sequence always produce numbers internal function summary function","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/cinqnum.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cinqnum — cinqnum","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/convdistr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"convdistr: Convolute Probabilistic Distributions — convdistr-package","title":"convdistr: Convolute Probabilistic Distributions — convdistr-package","text":"Convolute probabilistic distributions using random generator function distribution. new random number generator function created perform mathematical operation individual random samples random generator function distribution. See documentation examples.","code":""},{"path":[]},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/convdistr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"convdistr: Convolute Probabilistic Distributions — convdistr-package","text":"Maintainer: Aponte John john.j.aponte@gmail.com (ORCID)","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/fitbeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits a beta distribution based on quantiles — fitbeta","title":"Fits a beta distribution based on quantiles — fitbeta","text":"Fits beta distribution based quantiles","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/fitbeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits a beta distribution based on quantiles — fitbeta","text":"","code":"fitbeta_ml(point, lci, uci)  fitbeta(point, lci, uci)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/fitbeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits a beta distribution based on quantiles — fitbeta","text":"point Point estimates corresponding median lci Lower limit (quantile 0.025) uci Upper limit (quantile 0.975)","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/fitbeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits a beta distribution based on quantiles — fitbeta","text":"parameters shape1 shape2 beta distribution","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/fitbeta.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Fits a beta distribution based on quantiles — fitbeta","text":"fitbeta_ml(): using ML estimate parameters fitbeta(): preserve expected value","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/fitbeta.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fits a beta distribution based on quantiles — fitbeta","text":"wrap fitdist obtain best parameters beta distribution based quantiles. using confidence intervals (ML), shape parameters obtained using following formula: \\(varp = (p_uci-p_lci)/4^2\\) \\(shape1 = p_mean * (p_mean * (1 - p_mean) / varp - 1)\\) \\(shape2 =(1 - p_mean) * (p_mean * (1 - p_mean) / varp - 1) \\)","code":""},{"path":[]},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/fitbeta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fits a beta distribution based on quantiles — fitbeta","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/fitbeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fits a beta distribution based on quantiles — fitbeta","text":"","code":"fitbeta_ml(0.45,0.40,0.50) #>   shape1   shape2  #> 170.5639 208.4047  fitbeta(0.45,0.40,0.50) #> shape1 shape2  #> 177.75 217.25"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/fitdirichlet.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits a Dirichlet distribution, — fitdirichlet","title":"Fits a Dirichlet distribution, — fitdirichlet","text":"Fits Dirichlet distribution based parameters Beta distributions","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/fitdirichlet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits a Dirichlet distribution, — fitdirichlet","text":"","code":"fitdirichlet(..., plotBeta = FALSE, n.fitted = \"opt\")"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/fitdirichlet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits a Dirichlet distribution, — fitdirichlet","text":"... named vectors distribution parameters shape1, shape2 plotBeta TRUE ggplot densities plotted n.fitted Method fit values","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/fitdirichlet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits a Dirichlet distribution, — fitdirichlet","text":"vector parameters Dirichlet distribution","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/fitdirichlet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fits a Dirichlet distribution, — fitdirichlet","text":"one arguments named vector values shape1, shape2. Values fitbeta suitable .  wrap fitDirichlet","code":""},{"path":[]},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/fitdirichlet.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fits a Dirichlet distribution, — fitdirichlet","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/fitdirichlet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fits a Dirichlet distribution, — fitdirichlet","text":"","code":"a <- fitbeta(0.3, 0.2, 0.4) c <- fitbeta(0.2, 0.1, 0.3) b <- fitbeta(0.5, 0.4, 0.6) fitdirichlet(cat1=a,cat2=b,cat3=c) #>     cat1     cat2     cat3  #> 24.70347 41.17246 16.46898"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/ggDISTRIBUTION.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of DISTRIBUTION objects using ggplot2 — ggDISTRIBUTION","title":"Plot of DISTRIBUTION objects using ggplot2 — ggDISTRIBUTION","text":"Plot DISTRIBUTION objects using ggplot2","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/ggDISTRIBUTION.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of DISTRIBUTION objects using ggplot2 — ggDISTRIBUTION","text":"","code":"ggDISTRIBUTION(x, n = 10000)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/ggDISTRIBUTION.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of DISTRIBUTION objects using ggplot2 — ggDISTRIBUTION","text":"x object class DISTRIBUTION n number observation","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/ggDISTRIBUTION.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of DISTRIBUTION objects using ggplot2 — ggDISTRIBUTION","text":"ggplot object density distribution","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/ggDISTRIBUTION.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of DISTRIBUTION objects using ggplot2 — ggDISTRIBUTION","text":"","code":"x <- new_NORMAL(0,1) ggDISTRIBUTION(x) #> Warning: `stat(density)` was deprecated in ggplot2 3.4.0. #> ℹ Please use `after_stat(density)` instead. #> ℹ The deprecated feature was likely used in the convdistr package. #>   Please report the issue to the authors.  y <- new_DIRICHLET(c(10,20,70)) ggDISTRIBUTION(x)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata for a DISTRIBUTION — metadata","title":"Metadata for a DISTRIBUTION — metadata","text":"Shows distribution oval values DISTRIBUTION object","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata for a DISTRIBUTION — metadata","text":"","code":"metadata(x)  # S3 method for DISTRIBUTION metadata(x)  # S3 method for default metadata(x)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metadata for a DISTRIBUTION — metadata","text":"x DISTRIBUTION object","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metadata for a DISTRIBUTION — metadata","text":"data.frame metadata distributions","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/metadata.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Metadata for a DISTRIBUTION — metadata","text":"metadata(DISTRIBUTION): Metadata DISTRIBUTION objects metadata(default): Metadata objects","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/metadata.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Metadata for a DISTRIBUTION — metadata","text":"number columns depends dimensions distribution. one column distribution name distribution one column dimension names oval field.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/metadata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Metadata for a DISTRIBUTION — metadata","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/new_MIXTURE.html","id":null,"dir":"Reference","previous_headings":"","what":"Mixture of DISTRIBUTION objects — new_MIXTURE","title":"Mixture of DISTRIBUTION objects — new_MIXTURE","text":"Produce new distribution obtain random drawns mixture DISTRIBUTION objects","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/new_MIXTURE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mixture of DISTRIBUTION objects — new_MIXTURE","text":"","code":"new_MIXTURE(listdistr, mixture)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/new_MIXTURE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mixture of DISTRIBUTION objects — new_MIXTURE","text":"listdistr list DISTRIBUTION objects mixture vector probabilities mixture distributions. Must add 1 missing drawns obtained distributions probability","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/new_MIXTURE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mixture of DISTRIBUTION objects — new_MIXTURE","text":"object class MIXTURE, DISTRIBUTION","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/new_MIXTURE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mixture of DISTRIBUTION objects — new_MIXTURE","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/new_MIXTURE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mixture of DISTRIBUTION objects — new_MIXTURE","text":"","code":"x1 <- new_NORMAL(0,1) x2 <- new_NORMAL(4,1) x3 <- new_NORMAL(6,1) new_MIXTURE(list(x1,x2,x3)) #>   distribution     rvar #> 1      MIXTURE 3.333333"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/new_MULTINORMAL.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate Normal Distribution — new_MULTINORMAL","title":"Multivariate Normal Distribution — new_MULTINORMAL","text":"Return DISTRIBUTION object draw random numbers  multivariate normal distribution using mvrnorm function.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/new_MULTINORMAL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate Normal Distribution — new_MULTINORMAL","text":"","code":"new_MULTINORMAL(p_mu, p_sigma, p_dimnames, tol = 1e-06, empirical = FALSE)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/new_MULTINORMAL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multivariate Normal Distribution — new_MULTINORMAL","text":"p_mu vector means p_sigma positive-definite symmetric matrix covariance matrix p_dimnames character represents name dimension tol tolerance (relative largest variance) numerical lack positive-definiteness p_sigma. empirical logical. true, mu Sigma specify empirical population mean covariance matrix.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/new_MULTINORMAL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multivariate Normal Distribution — new_MULTINORMAL","text":"object class DISTRIBUTION, MULTINORMAL","code":""},{"path":[]},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/new_MULTINORMAL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multivariate Normal Distribution — new_MULTINORMAL","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/new_MULTINORMAL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multivariate Normal Distribution — new_MULTINORMAL","text":"","code":"msigma <- matrix(c(1,0,0,1), ncol=2) d1 <- new_MULTINORMAL(c(0,1), msigma) rfunc(d1, 10) #>          rvar1       rvar2 #> 1  -0.86844585  0.74160000 #> 2   1.01689456  1.03978988 #> 3  -0.81118937  0.63515824 #> 4   1.27445664  2.37396501 #> 5   1.74157949  0.09141219 #> 6   0.36770829  0.80035625 #> 7   0.06878527  1.41361482 #> 8  -0.14539258  1.69107694 #> 9   1.10003195 -0.62549106 #> 10 -1.21478526 -0.97994597"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/omit_NA.html","id":null,"dir":"Reference","previous_headings":"","what":"Omit NA distributions from a list of distributions — omit_NA","title":"Omit NA distributions from a list of distributions — omit_NA","text":"Omit NA distributions list distributions","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/omit_NA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Omit NA distributions from a list of distributions — omit_NA","text":"","code":"omit_NA(listdistr)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/omit_NA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Omit NA distributions from a list of distributions — omit_NA","text":"listdistr list DISTRIBUTION objects","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/omit_NA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Omit NA distributions from a list of distributions — omit_NA","text":"list without NA_DISTRIBUTION","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/omit_NA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Omit NA distributions from a list of distributions — omit_NA","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/plot.DISTRIBUTION.html","id":null,"dir":"Reference","previous_headings":"","what":"plot of  DISTRIBUTION objects — plot.DISTRIBUTION","title":"plot of  DISTRIBUTION objects — plot.DISTRIBUTION","text":"Plot histogram density distribution using random numbers distribution","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/plot.DISTRIBUTION.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot of  DISTRIBUTION objects — plot.DISTRIBUTION","text":"","code":"# S3 method for DISTRIBUTION plot(x, n = 10000, ...)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/plot.DISTRIBUTION.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot of  DISTRIBUTION objects — plot.DISTRIBUTION","text":"x object class DISTRIBUTION n number observations ... parameters hist function","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/plot.DISTRIBUTION.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot of  DISTRIBUTION objects — plot.DISTRIBUTION","text":"return value. Side effect plot histogram.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/plot.DISTRIBUTION.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot of  DISTRIBUTION objects — plot.DISTRIBUTION","text":"","code":"x <- new_NORMAL(0,1) plot(x)  y <- new_DIRICHLET(c(10,20,70)) plot(x)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/restrict_environment.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a new function with a smaller environment — restrict_environment","title":"Build a new function with a smaller environment — restrict_environment","text":"standard feature, R include environment function variables available function created. , however prompt leak reference factory function created within list.. include component list function environment. prevent , random generator functions encapsulated restricted environment variables function requires work included","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/restrict_environment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a new function with a smaller environment — restrict_environment","text":"","code":"restrict_environment(f, ...)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/restrict_environment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a new function with a smaller environment — restrict_environment","text":"f input function ... define set  variables included variable = value.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/restrict_environment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a new function with a smaller environment — restrict_environment","text":"new function restricted environment","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/restrict_environment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Build a new function with a smaller environment — restrict_environment","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/restrict_environment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a new function with a smaller environment — restrict_environment","text":"","code":"a = 0 b = 1 myfunc <- restrict_environment(  function(n) {    rnorm(meanvalue, sdvalue)  },  meanvalue = a, sdvalue = b)  myfunc(10) #> numeric(0) ls(envir=environment(myfunc)) #> [1] \"meanvalue\" \"sdvalue\""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/rfunc.DISTRIBUTION.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for a DISTRIBUTION object — rfunc.DISTRIBUTION","title":"Generic function for a DISTRIBUTION object — rfunc.DISTRIBUTION","text":"Generic function DISTRIBUTION object","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/rfunc.DISTRIBUTION.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for a DISTRIBUTION object — rfunc.DISTRIBUTION","text":"","code":"# S3 method for DISTRIBUTION rfunc(x, n)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/rfunc.DISTRIBUTION.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for a DISTRIBUTION object — rfunc.DISTRIBUTION","text":"x object class DISTRIBUTION n number random samples","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/rfunc.DISTRIBUTION.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for a DISTRIBUTION object — rfunc.DISTRIBUTION","text":"matrix many rows n many columns ","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/rfunc.DISTRIBUTION.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generic function for a DISTRIBUTION object — rfunc.DISTRIBUTION","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/rfunc.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default function — rfunc.default","title":"Default function — rfunc.default","text":"Default function","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/rfunc.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default function — rfunc.default","text":"","code":"# S3 method for default rfunc(x, n)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/rfunc.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default function — rfunc.default","text":"x object class different DISTRIBUTION n number random samples","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/rfunc.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default function — rfunc.default","text":"return value. Raise error message.","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/rfunc.default.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Default function — rfunc.default","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/rfunc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random numbers from a DISTRIBUTION object — rfunc","title":"Generate random numbers from a DISTRIBUTION object — rfunc","text":"generic method calls rfunc slot object","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/rfunc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random numbers from a DISTRIBUTION object — rfunc","text":"","code":"rfunc(x, n)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/rfunc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random numbers from a DISTRIBUTION object — rfunc","text":"x object n number random samples","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/rfunc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate random numbers from a DISTRIBUTION object — rfunc","text":"matrix many rows n many columns dimensions distribution","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/rfunc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate random numbers from a DISTRIBUTION object — rfunc","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/same_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the dimensions of a list of distributions — same_dimensions","title":"Check the dimensions of a list of distributions — same_dimensions","text":"Check dimensions list distributions","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/same_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the dimensions of a list of distributions — same_dimensions","text":"","code":"same_dimensions(listdistr)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/same_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the dimensions of a list of distributions — same_dimensions","text":"listdistr list DISTRIBUTION objects","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/same_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the dimensions of a list of distributions — same_dimensions","text":"return TRUE dimensions ","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/set_seed.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify a the seed of a Distribution object — set_seed","title":"Modify a the seed of a Distribution object — set_seed","text":"create new DISTRIBUTION object specified seed","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/set_seed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify a the seed of a Distribution object — set_seed","text":"","code":"set_seed(distribution, seed)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/set_seed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify a the seed of a Distribution object — set_seed","text":"distribution DISTRIBUTION object seed new seed","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/set_seed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify a the seed of a Distribution object — set_seed","text":"codeDISTRIBUTION object class","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/set_seed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Modify a the seed of a Distribution object — set_seed","text":"John J. Aponte","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/summary.DISTRIBUTION.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of Distributions — summary.DISTRIBUTION","title":"Summary of Distributions — summary.DISTRIBUTION","text":"Summary Distributions","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/summary.DISTRIBUTION.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of Distributions — summary.DISTRIBUTION","text":"","code":"# S3 method for DISTRIBUTION summary(object, n = 10000, ...)"},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/summary.DISTRIBUTION.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of Distributions — summary.DISTRIBUTION","text":"object object class DISTRIBUTION n number random samples distribution ... parameters. used","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/summary.DISTRIBUTION.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of Distributions — summary.DISTRIBUTION","text":"data.frame many rows dimensions distribution  following columns distribution name varname name dimension oval value nsample number random samples mean_ mean value sample sd_ standard deviation sample lci_ lower 95 median_ median value sample uci_ upper 95","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/summary.DISTRIBUTION.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Summary of Distributions — summary.DISTRIBUTION","text":"sample uses seed saved object provide values fir n value","code":""},{"path":"htinstatps://johnaponte.github.io/convdistr/reference/summary.DISTRIBUTION.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary of Distributions — summary.DISTRIBUTION","text":"John J. Aponte","code":""}]
